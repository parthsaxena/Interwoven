<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.transitioning = true;
alarm[5] = 60;

image_speed = 0.5;

grav = 0.2;
hsp = 0;
vsp = 0;
jumpspeed = 7;
movespeed = 4;
sprintValue = 3;

jumped = false;

gamepad_set_axis_deadzone(0, 0.3);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.transitioning = false;

with (obj_black_bg) {
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>idle = true;

key_right = keyboard_check(ord("D")) || (gamepad_axis_value(0, gp_axislh) &gt; 0);
key_sprint = keyboard_check(ord("Z")) || (gamepad_button_check(0, gp_shoulderrb));
key_left = -(keyboard_check(ord("A")) || (gamepad_axis_value(0, gp_axislh) &lt; 0));
key_jump = keyboard_check_pressed(vk_space) || (gamepad_button_check_pressed(0, gp_face1));
key_jump_held = keyboard_check(vk_space) || (gamepad_button_check(0, gp_face1));
key_pause = keyboard_check_pressed(vk_escape);

// Movement

if (key_sprint) {
    move = key_left + key_right;
    hsp = move * (movespeed + sprintValue);
} else {
    move = key_left + key_right;
    hsp = move * movespeed;
}

if (keyboard_check_pressed(vk_escape)) { 
    image_xscale = 1;
    show_message("Game Paused");    
}

// Pause Game
if (key_pause) {
    show_message("Game Paused");
}

// Gravity
if (vsp &lt; 10) vsp += grav;

if (place_meeting(x, y+1, obj_grass)) {
    vsp = key_jump * -jumpspeed;
}

if (vsp &lt; 0) &amp;&amp; (!key_jump_held) vsp = max(vsp, -jumpspeed/2);

horizontalCheck = place_meeting(x+hsp, y, obj_grass) || place_meeting(x+hsp, y, obj_dirt);
verticalCheck = place_meeting(x, y+vsp, obj_grass) || place_meeting(x, y+vsp, obj_dirt);

// Horizontal Collision
if (horizontalCheck) {
    while (!horizontalCheck) {
        x += sign(hsp);
    }
    hsp = 0;
}

// Vertical Collision
if (verticalCheck) {
    while (!verticalCheck) {
        y += sign(vsp);
    }
    vsp = 0;
}

x += hsp;
y += vsp;

// Animate
if (move!=0) image_xscale = move;
if (place_meeting(x, y+1, obj_grass)) {
    if (move != 0) sprite_index = spr_player_run; else sprite_index = spr_player_idle;
} else {
    if (vsp &lt; 0) sprite_index = spr_player_jump; else sprite_index = spr_player_fall;
}

if (y &gt; 768) script_execute(scr_gameover);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
