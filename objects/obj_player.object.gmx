<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.transitioning = true;
alarm[5] = 60;

grav = 0.2;
hsp = 0;
vsp = 0;
jumpspeed = 7;
movespeed = 4;

jumped = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.transitioning = false;

with (obj_black_bg) {
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>jumped = false;
sprite_index = spr_player;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>idle = true;

key_right = keyboard_check(ord("D"));
key_left = -keyboard_check(ord("A"));
key_jump = keyboard_check_pressed(vk_space);
key_pause = keyboard_check_pressed(vk_escape);

// Movement

move = key_left + key_right;
hsp = move * movespeed;

if (keyboard_check_pressed(vk_escape)) {
    
    image_xscale = 1;
    show_message("Game Paused");    
}

//Sprite Management

if (key_right) {
    image_speed = 0.5;
    image_xscale = 1;
}

if (key_left == -1) {
    image_speed = 0.5;
    image_xscale = -1;
}

if (key_jump) {
    sprite_index = spr_player_jump;
}

if (key_pause) {
    show_message("Game Paused");
}

if (!key_right &amp;&amp; !key_left) {
    sprite_index = spr_player;
    image_speed = 0;
}

// Gravity

if (vsp &lt; 10) vsp += grav;

if (place_meeting(x, y+1, obj_grass)) {
    vsp = key_jump * -jumpspeed;
}

x += hsp;
y += vsp;

/*if (keyboard_check(ord("A"))) {
    image_xscale = -1;
    if (place_free(x-5, y)) {
        if (x &gt; room_width || x &lt; 0) {
            
        } else {
            idle = false;
            x-=5;
            image_speed = 0.5;
        }
    }
} else {
    idle = true;
} 

if (keyboard_check(ord("D"))) {
    image_xscale = 1;
    if (place_free(x+5, y)) {
        if (x &gt; room_width || x &lt; 0) {
            
        } else {
            idle = false;
            x+=5;
            image_speed = 0.5;
        }
    }
} else {
    if (idle) idle = true;
}

if (keyboard_check_pressed(vk_space)) {
    alarm[0] = 60;
    jumped = true;
    sprite_index = spr_player_jump;
}*/

// Bring up Pause Menu

/*if (idle) {
    image_speed = 0;
    image_index = 0;
}

if (jumped) {
    y-=alarm[0] / 5;
}*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
